apply plugin: 'com.android.application'
apply from: '../gradle/githooks.gradle'
apply from: '../config/quality.gradle'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.andela.android.javadevelopers"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASEURL", "\"https://api.github.com\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:design:${rootProject.designSupportVerion}"
    implementation "com.android.support:appcompat-v7:${rootProject.appcompatSupportVersion}"
    implementation "com.android.support:support-annotations:${rootProject.annotationsSupportVersion}"

    // layout
    implementation "com.android.support.constraint:constraint-layout:${rootProject.constraintLayoutVersion}"
    implementation "com.android.support:recyclerview-v7:${rootProject.recyclerviewVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.cardviewVersion}"

    // test runners
    testImplementation "junit:junit:${rootProject.junitVersion}"
    androidTestImplementation "com.android.support.test:runner:${rootProject.testRunnerVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.espressoCoreVersion}"
    testImplementation "org.robolectric:robolectric:${rootProject.robolectricVersion}"
    testCompile "org.assertj:assertj-core:${rootProject.assertjCoreVersion}"
    testCompile "org.mockito:mockito-core:${rootProject.mockitoCoreVersion}"

    // retrofit and gson
    implementation "com.google.code.gson:gson:${rootProject.gsonVersion}"
    implementation "com.squareup.retrofit2:retrofit:${rootProject.retrofit2Version}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.retrofit2ConverterGsonVersion}"

    //picasso
    implementation "com.squareup.picasso:picasso:${rootProject.picassoVersion}"

    // okhttp client
    implementation "com.squareup.okhttp3:okhttp:${rootProject.okhttp3Version}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.okhttp3LoggingInterceptorVersion}"

    // butter knife library
    implementation "com.jakewharton:butterknife:${rootProject.butterknifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.butterknifeVersion}"

    //dagger 2
    implementation "com.google.dagger:dagger:${rootProject.daggerVersion}"
    implementation "com.google.dagger:dagger-android:${rootProject.daggerAndroidVersion}"

    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.daggerCompilerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${rootProject.daggerAndroidProcessorVersion}"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:${rootProject.rxjava2Version}"
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.rxandroidVersion}"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:${rootProject.retrofit2Rxjava2AdapterVersion}"
}
